version: "3.9"

networks:
  public:
    name: public
    driver: bridge
    external: true

services:
## Network Proxy
  traefik:
    image: traefik:2.9.6
    restart: always
    networks:
      public:
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    environment:
      TZ:
      CF_DNS_API_TOKEN:
      CF_ZONE_API_TOKEN:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Use Docker Socket Proxy instead for improved security
      - ${DATA_DIR}/traefik/traefik.log:/traefik.log
      - ${DATA_DIR}/traefik/access.log:/access.log
      - ${DATA_DIR}/traefik/acme/cf-acme.json:/cf-acme.json
    command: # CLI arguments
      - "--providers.docker"
      - '--providers.docker.defaultrule=Host(`{{ index .Labels "com.docker.compose.service" }}.${DOMAINNAME}`)'
      - "--providers.docker.exposedByDefault=true"
      - "--providers.docker.network=public"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=https"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.https.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22"
      - "--entrypoints.https.http.tls.certResolver=cf"
      - "--entrypoints.https.http.tls.domains[0].main=${DOMAINNAME}"
      - "--entrypoints.https.http.tls.domains[0].sans=*.${DOMAINNAME}"
      - "--certificatesresolvers.cf.acme.email=jebusv20@gmail.com"
      - "--certificatesresolvers.cf.acme.storage=/cf-acme.json"
      - "--certificatesresolvers.cf.acme.dnschallenge=true"
      - "--certificatesresolvers.cf.acme.dnschallenge.provider=cloudflare"
      # Enable the Traefik log, for configurations and errors
      - "--log=true"
      - "--log.level=DEBUG" # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - "--log.filePath=/traefik.log"
      - "--log.format=json" # (Default: common) COMMON, JSON
      # Enable the access log, with HTTP requests
      - "--accesslog=true"
      - "--accessLog.filePath=/access.log"
      - "--accessLog.format=json" # (Default: common) COMMON, JSON
      # Enable the Dashboard and API
      - "--api=true"
      - "--api.dashboard=true"
    labels:
      traefik.http.routers.traefik.service: api@internal
  
  ############################# DOWNLOADERS

  qbit:
    image: "linuxserver/qbittorrent"
    restart: always
    networks:
      public:
    ports:
      - "6881:6881/tcp"
      - "6881:6881/udp"
    volumes:
      - ${DATA_DIR}/qbittorrent:/config
      - ${DOWNLOADS_DIR}:/downloads
    environment:
      TZ:
      PUID:
      PGID:
      UMASK_SET: 002
    deploy:
      resources:
        limits:
          memory: 8G
    labels:
      traefik.http.services.qbittorent.loadbalancer.server.port: 8080

  ############################# INDEXERS

  # Jackett - Torrent proxy
  jackett:
    image: linuxserver/jackett
    restart: always
    networks:
      public:
    volumes:
      - ${DATA_DIR}/jackett:/config
      - ${DOWNLOADS_DIR}:/downloads
      - /etc/localtime:/etc/localtime:ro
    environment:
      PUID:
      PGID:
      TZ:
    labels:
      traefik.http.services.jackett.loadbalancer.server.port: 9117


  ############################# PVRS

  # Radarr - Movie management
  radarr:
    image: linuxserver/radarr
    restart: always
    networks:
      public:
    volumes:
      # Optional. See why MediaCover is mounted as volume https://github.com/htpcBeginner/docker-traefik/discussions/147
      # - ${DOCKERDIR}/radarr/MediaCover:/config/MediaCover
      - ${DATA_DIR}/radarr:/config
      - ${DOWNLOADS_DIR}:/downloads
      - ${MEDIA_DIR}/movies:/movies
      - /etc/localtime:/etc/localtime:ro
    environment:
      PUID:
      PGID:
      TZ:
    labels:
      traefik.http.services.radarr.loadbalancer.server.port: 7878

  # Sonarr - TV Shows management
  sonarr:
    image: linuxserver/sonarr
    restart: always
    networks:
      public:
    volumes:
      # Optional. See why MediaCover is mounted as volume https://github.com/htpcBeginner/docker-traefik/discussions/147
      # - ${DOCKERDIR}/sonarr/MediaCover:/config/MediaCover
      - ${DATA_DIR}/sonarr:/config
      - ${DOWNLOADS_DIR}:/downloads
      - ${MEDIA_DIR}/tvshows:/tv
      - /etc/localtime:/etc/localtime:ro
    environment:
      PUID:
      PGID:
      TZ:
    labels:
      traefik.http.services.sonarr.loadbalancer.server.port: 8989

  ############################# MEDIA

  plexms:
    image: plexinc/pms-docker
    restart: always
    ports:
      - "32400:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp" # conflicts with xTeVe
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
      - "33400:33400"
    volumes:
      - ${MEDIA_DIR}/movies:/media/movies
      - ${MEDIA_DIR}/tvshows:/media/tvshows
      - ${MEDIA_DIR}/music:/media/music
      - ${DATA_DIR}/plexms:/config
      - /dev/shm:/data/transcode # Offload transcoding to RAM if you have enough RAM
    environment:
      TZ:
      PLEX_UID: ${PUID}
      PLEX_GID: ${PGID}
      PLEX_CLAIM:
      ADVERTISE_IP: ${PLEX_IP}
      ALLOWED_NETWORKS: 192.168.0.0/16,172.16.0.0/12,10.0.0.0/8
